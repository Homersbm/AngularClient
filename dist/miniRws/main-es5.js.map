{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/edit-exam/edit-exam.component.ts","webpack:///src/app/edit-exam/edit-exam.component.html","webpack:///src/app/exam/exam.component.ts","webpack:///src/app/exam/exam.component.html","webpack:///src/app/exam/exam.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","EditExamComponent","formBuilder","dialogRef","examService","dialogData","currentExam","selectedData","examFormGroup","group","examKey","required","patientKey","isLocked","examStatusCode","patientSexCode","examAge","updatedExam","value","save","subscribe","close","onSave","onClose","ExamComponent","dialog","displayedColumns","console","log","examServiceUrl","getExams","ex","examList","row","delete","open","width","height","data","ExamService","http","get","pipe","exam","headers","Headers","append","url","put","handleError","res","error","body","providedIn","environment","production","bootstrapModule","catch","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ExamComponent } from './exam/exam.component';\n\n\nconst routes: Routes = [{ path: 'exam', component: ExamComponent }];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'Mini RWS';\n}\n","<h1>{{title}}</h1>\n    <div class=\"header-bar\"></div>\n    <nav>\n      <a routerLink=\"/exam\" routerLinkActive=\"active\">Exam</a>\n      <a routerLink=\"/patient\" routerLinkActive=\"active\">Patient</a>\n    </nav>\n    <router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NoopAnimationsModule } from '@angular/platform-browser/animations';\nimport { ExamComponent } from './exam/exam.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ExamService } from './exam/exam.service';\nimport { MatTableModule } from '@angular/material/table';\nimport { EditExamComponent } from './edit-exam/edit-exam.component';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport {MatFormFieldModule } from '@angular/material/form-field';\nimport {MatIconModule} from '@angular/material/icon';\n// import {MatInputModule} from '@angular/material/input';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ExamComponent,\n    EditExamComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    NoopAnimationsModule,\n    HttpClientModule,\n    MatTableModule,\n    MatDialogModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatFormFieldModule,\n    MatIconModule,\n    // MatInputModule,\n  ],\n  providers: [ExamService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { Exam, IEditExam } from '../exam/exam';\nimport { ExamService } from '../exam/exam.service';\n\n@Component({\n    selector: 'app-edit-exam',\n    templateUrl: './edit-exam.component.html',\n    styleUrls: ['./edit-exam.component.scss']\n})\nexport class EditExamComponent implements OnInit {\n    currentExam: Exam;\n    examFormGroup: FormGroup;\n    constructor(private formBuilder: FormBuilder,\n        private dialogRef: MatDialogRef<EditExamComponent>,\n        private examService: ExamService,\n        @Inject(MAT_DIALOG_DATA) dialogData: IEditExam<Exam>) {\n        this.currentExam = dialogData.selectedData;\n\n        this.examFormGroup = this.formBuilder.group({\n            examKey: [this.currentExam.examKey, Validators.required],\n            patientKey: [this.currentExam.patientKey, Validators.required],\n            isLocked: [this.currentExam.isLocked, Validators.required],\n            examStatusCode: [this.currentExam.isLocked, Validators.required],\n            patientSexCode: [this.currentExam.patientSexCode, Validators.required],\n            examAge: [this.currentExam.examAge, Validators.required],\n        });\n    }\n\n    ngOnInit(): void {\n        this.examFormGroup = this.formBuilder.group({\n            examKey: [this.currentExam.examKey, Validators.required],\n            patientKey: [this.currentExam.patientKey, Validators.required],\n            isLocked: [this.currentExam.isLocked, Validators.required],\n            examStatusCode: [this.currentExam.isLocked, Validators.required],\n            patientSexCode: [this.currentExam.patientSexCode, Validators.required],\n            examAge: [this.currentExam.examAge, Validators.required],\n        });\n\n    }\n\n    onSave(): void {\n        const updatedExam = {\n            examKey: this.examFormGroup.value.examKey,\n            patientKey: this.examFormGroup.value.patientKey,\n            isLocked: this.examFormGroup.value.isLocked,\n            examStatusCode: this.examFormGroup.value.examStatusCode,\n            patientSexCode: this.examFormGroup.value.patientSexCode,\n            examAge: this.examFormGroup.value.examAge\n        } as Exam;\n\n        this.examService.save(updatedExam).subscribe( () =>  this.dialogRef.close(true));\n    }\n\n    onClose(): void {\n        this.dialogRef.close(true);\n    }\n\n}\n","<form [formGroup]=\"examFormGroup\">\n    <div class=\"flex-layout m-t-10\">\n        <mat-label>Exam Key</mat-label>\n        <mat-form-field> \n                <input matInput formControlName=\"examKey\">\n        </mat-form-field>\n    </div>\n\n    <div class=\"flex-layout m-t-10\">\n        <mat-label>Patient Key</mat-label>\n        <mat-form-field> \n                <input matInput formControlName=\"patientKey\">\n        </mat-form-field>\n    </div>\n\n\n    <div class=\"flex-layout m-t-10\">\n        <mat-label>Exam Locked</mat-label>\n        <mat-form-field> \n                <input matInput formControlName=\"isLocked\">\n        </mat-form-field>\n    </div>\n\n\n    <div class=\"flex-layout m-t-10\">\n        <mat-label>Exam Status Code</mat-label>\n        <mat-form-field> \n                <input matInput formControlName=\"examStatusCode\">\n        </mat-form-field>\n    </div>\n\n    <div class=\"flex-layout m-t-10\">\n        <mat-label>Patient Sex</mat-label>\n        <mat-form-field> \n                <input matInput formControlName=\"patientSexCode\">\n        </mat-form-field>\n    </div>\n\n    <div class=\"flex-layout m-t-10\">\n        <mat-label>Exam Age</mat-label>\n        <mat-form-field> \n                <input matInput formControlName=\"examAge\">\n        </mat-form-field>\n    </div>\n\n</form>\n\n<button mat-button color='accent' (click)='onSave()' [disabled]=\"examFormGroup.pristine || !examFormGroup.valid\">Save</button>\n<button mat-button mat-dialog-close (click)='onClose()'>Close</button>\n","import { Component, OnInit } from '@angular/core';\nimport { ExamService } from './exam.service';\nimport { Exam } from './exam';\nimport { MatDialog } from '@angular/material/dialog';\nimport { EditExamComponent } from '../edit-exam/edit-exam.component';\n\n@Component({\n    selector: 'app-exam',\n    templateUrl: './exam.component.html',\n    styleUrls: ['./exam.component.scss']\n})\nexport class ExamComponent implements OnInit {\n    displayedColumns: string[] = ['examKey', 'patientKey', 'examStatusCode', 'patientSexCode', 'examAge', 'deletebutton'];\n    examList: Exam[];\n\n    constructor(private examService: ExamService,\n                private dialog: MatDialog ) { }\n\n    ngOnInit(): void {\n        console.log('ngOnInit');\n        console.log(this.examService.examServiceUrl);\n        this.examService.getExams()\n            .subscribe(ex => this.examList = ex);\n    }\n\n    deleteExam(row: Exam) {\n        this.examService.delete(row).subscribe();\n    }\n\n    getExamRecord(row: Exam): void {\n        this.dialog.open(EditExamComponent, {\n            width: '676px',\n            height: 'auto',\n            data: {\n                selectedData: row\n            }\n        });\n    }\n\n}\n","<p>Exam Lookup</p>\n\n<table  mat-table  [dataSource]=\"examList\">\n    <ng-container matColumnDef=\"examKey\">\n        <th mat-header-cell *matHeaderCellDef> Exam Key </th>\n        <td mat-cell *matCellDef=\"let exam\"> {{exam.examKey}} </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"patientKey\">\n        <th mat-header-cell *matHeaderCellDef> Patient Key </th>\n        <td mat-cell *matCellDef=\"let exam\"> {{exam.patientKey}} </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"isLocked\">\n        <th mat-header-cell *matHeaderCellDef> Locked </th>\n        <td mat-cell *matCellDef=\"let exam\"> {{exam.isLocked}} </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"examStatusCode\">\n        <th mat-header-cell *matHeaderCellDef> Exam StatusCode </th>\n        <td mat-cell *matCellDef=\"let exam\"> {{exam.examStatusCode}} </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"patientSexCode\">\n        <th mat-header-cell *matHeaderCellDef> Patient SexCode </th>\n        <td mat-cell *matCellDef=\"let exam\"> {{exam.patientSexCode}} </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"examAge\">\n        <th mat-header-cell *matHeaderCellDef> Exam Age </th>\n        <td mat-cell *matCellDef=\"let exam\"> {{exam.examAge}} </td>\n      </ng-container>\n\n\n      <ng-container matColumnDef=\"deletebutton\">\n        <mat-header-cell *matHeaderCellDef></mat-header-cell>\n        <mat-cell *matCellDef=\"let row\">\n            <mat-icon class=\"material-icons\" (click)=\"deleteExam(row)\">delete</mat-icon>\n        </mat-cell>\n    </ng-container>\n\n      <!-- <mat-row  *matRowDef=\"let row; columns: displayedColumns;\" (click)=\"getExamRecord(row)\"></mat-row> -->\n\n\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\" (dblclick)=\"getExamRecord(row)\" ></tr>\n\n    </table>\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse} from '@angular/common/http';\n\nimport { Observable, throwError as observableThrowError } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\n\n\nimport { Exam } from './exam';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ExamService {\n\n    public examServiceUrl = '/api/Exam'; // URL to web api\n\n  constructor(private http: HttpClient) {\n    console.log('COnstru:' + this.examServiceUrl );\n   }\n\n  getExams(): Observable<Exam[]> {\n    return this.http\n      .get<Exam[]>(this.examServiceUrl)\n      .pipe(map(data => data));\n  }\n\n  save(exam: Exam) {\n    const headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    const url = `${this.examServiceUrl}/${exam.examKey}` + `?examKey=` + exam.examKey;\n    return this.http.put<Exam>(url, exam).pipe(catchError(this.handleError));\n  }\n\n  private handleError(res: HttpErrorResponse | any) {\n    console.error(res.error || res.body.error);\n    return observableThrowError(res.error || 'Server error');\n  }\n\n  delete(exam: Exam) {\n    const headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    const url = `${this.examServiceUrl}/${exam.examKey}` + `?examKey=` + exam.examKey;\n    return this.http.delete<Exam>(url).pipe(catchError(this.handleError));\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}